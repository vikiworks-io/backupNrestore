#!/bin/bash
# Version 1.4
# Delete Backups
#
#		Author	: Viki (a) Vignesh Natarajan 
#		Contact	: vikiworks.io
#		Licence : MIT


ARG0=$0
ARG1=$1

function get_current_dir()
{
    CURRENT_DIR=`pwd -P`
}

function command_exec_dir_check()
{
	if [ ! -f delete_backups_older_than_x_days ]; then
		echo "error: command should be executed from backupNrestore directory"
		exit 1
	fi
}

function usage()
{
        echo "  usage: "
        echo
        echo "          $ARG0 <number: representing days ( 1 to 31 ) >"
        echo
        echo "  example:"
        echo
        echo "          $ARG0 2"
        echo 
        echo "  This command deletes backup older than 2 days" 
        echo 
}

function get_timestamp()
{
    DAY=$(date '+%d')
    MONTH=$(date '+%m')
    YEAR=$(date '+%Y')
    HOUR=$(date '+%H')
    MINUTE=$(date '+%M')
    TIME_STAMP="D${DAY}${MONTH}${YEAR}"
}

function arg_check()
{
    if [ -z "$ARG1" ]; then 
        usage
        exit 1
    fi

    if [ "$ARG1" -gt 31 ]; then
        echo
        echo
        echo "  error: invalid argument"
        echo
        echo
        usage
        exit 1
    fi

    N_DAYS="$ARG1"
}

function delete_old_backups()
{
    get_timestamp

    if [ -z $N_DAYS ]; then
        return
    fi

    DAYS_OLD="+${N_DAYS}"
    
    if [ -z "$BACKUP_DIR" ]; then
        echo "  error: BACKUP_DIR is empty, check config.sh"
        exit 1 
    fi

    cd $BACKUP_DIR
    if [ $? -ne 0 ]; then
        echo "  error: invalid backup dir ( $BACKUP_DIR ), check config.sh"
        exit 1 
    fi

    FCOUNT=0
    
    FCOUNT=`find . -type f -name "*.tar.gz" | wc -l`
    if [ $FCOUNT -le 0 ]; then
        echo "  info: no backups found"
        exit 0 
    fi

    FCOUNT=0

    FCOUNT=`find . -type f -name "*.tar.gz" -mtime $DAYS_OLD  | wc -l`
    if [ $FCOUNT -le 0 ]; then
        echo "  info: no backups older than ( $DAYS_OLD days ) found"
        exit 0 
    fi


    echo "Deleting backups older than ( $DAYS_OLD days )"
    echo
    echo
    find . -type f -name "*.tar.gz" -mtime $DAYS_OLD -delete    
    echo
    echo
}


get_current_dir
command_exec_dir_check
arg_check
delete_old_backups
